# Netlify "kitchen sink" example: https://github.com/netlify/netlify-cms/blob/master/dev-test/config.yml

localhost_development:
  backend:
    name: file-system
    api_root: /api

backend:
  name: github
  repo: damassi/gatsby-typescript-netlify-starter
  branch: master

display_url: http://localhost:8000
media_folder: static/assets
public_folder: assets

collections:
  - name: mdx
    label: Mdx Example
    description: Documentation
    folder: content/mdx
    extension: mdx
    format: frontmatter
    widget: mdx
    create: true
    fields:
      - { label: Title, name: title, widget: string, required: true }
      - { label: Body, name: body, widget: mdx }

  - name: blog
    label: Blog
    folder: content/blog
    create: true
    slug: "{{year}}-{{month}}-{{day}}-{{slug}}"
    fields:
      - {
          label: Template Key,
          name: templateKey,
          widget: hidden,
          default: blog-post,
        }
      - { label: Title, name: title, widget: string }
      - { label: Publish Date, name: date, widget: datetime }
      - { label: Description, name: description, widget: text }
      - { label: Tags, name: tags, widget: list }
      - { label: Body, name: body, widget: markdown }

- url: https://frosty-ride-4ff3b9.netlify.com/
  repo: https://github.com/damassi/gatsby-starter-typescript-rebass-netlifycms
  description:
    A Gatsby starter built on top of MDX (React + Markdown), NetlifyCMS (with
    MDX and netlify-cms-backend-fs support -- no need to deploy), TypeScript,
    Rebass for UI, Styled Components, and Jest for testing. Very little visual
    styling has been applied so that you can bring your own :)
  tags:
    - MDX
    - NetlifyCMS
    - netlify-cms-backend-fs
    - TypeScript
    - Rebass
    - styled-components
  features:
    - MDX - Markdown + React
    - NetlifyCMS (with MDX support)
    - Read and write to local file system via netlify-cms-backend-fs
    - TypeScript
    - Rebass
    - Styled Components
    - Jest
